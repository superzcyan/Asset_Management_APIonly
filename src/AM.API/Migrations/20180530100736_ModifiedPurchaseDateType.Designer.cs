// <auto-generated />
using AM.API.Helpers;
using AM.Core.Domain.Assets;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace AM.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180530100736_ModifiedPurchaseDateType")]
    partial class ModifiedPurchaseDateType
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AM.Core.Domain.Assets.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Adapter")
                        .HasMaxLength(20);

                    b.Property<string>("AssetTag")
                        .HasMaxLength(20);

                    b.Property<string>("AssignedTo")
                        .HasMaxLength(50);

                    b.Property<string>("Battery")
                        .HasMaxLength(20);

                    b.Property<int?>("CategoryId");

                    b.Property<string>("DRNo")
                        .HasMaxLength(15);

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("date");

                    b.Property<int?>("HardDiskId");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(20);

                    b.Property<string>("MacAddress")
                        .HasMaxLength(20);

                    b.Property<int?>("ManufacturerId");

                    b.Property<int?>("MemoryId");

                    b.Property<int?>("ModelId");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.Property<string>("Notes")
                        .HasMaxLength(50);

                    b.Property<string>("PONo")
                        .HasMaxLength(15);

                    b.Property<int?>("ProcessorId");

                    b.Property<decimal?>("PurchaseCost");

                    b.Property<DateTime?>("PurchaseDate")
                        .HasColumnType("date");

                    b.Property<string>("SINo")
                        .HasMaxLength(15);

                    b.Property<string>("SerialNo")
                        .HasMaxLength(20);

                    b.Property<int?>("Status");

                    b.Property<int?>("SupplierId");

                    b.Property<int?>("VideoCardId");

                    b.Property<string>("Warranty")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("HardDiskId");

                    b.HasIndex("Id");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MemoryId");

                    b.HasIndex("ModelId");

                    b.HasIndex("ProcessorId");

                    b.HasIndex("SupplierId");

                    b.HasIndex("VideoCardId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("AM.Core.Domain.Categories.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AM.Core.Domain.Manufacturers.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("AM.Core.Domain.Models.Model", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("AM.Core.Domain.Processors.Processor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Processors");
                });

            modelBuilder.Entity("AM.Core.Domain.Sizes.HardDisk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Size")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Size");

                    b.HasIndex("Id", "Size");

                    b.ToTable("HardDiskSizes");
                });

            modelBuilder.Entity("AM.Core.Domain.Sizes.Memory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Size")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Size");

                    b.HasIndex("Id", "Size");

                    b.ToTable("MemorySizes");
                });

            modelBuilder.Entity("AM.Core.Domain.Sizes.VideoCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Size")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Size");

                    b.HasIndex("Id", "Size");

                    b.ToTable("VideoCardSizes");
                });

            modelBuilder.Entity("AM.Core.Domain.Suppliers.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<DateTime?>("DateUpdated");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("Name");

                    b.HasIndex("Id", "Name");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("AM.Core.Domain.Assets.Asset", b =>
                {
                    b.HasOne("AM.Core.Domain.Categories.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("AM.Core.Domain.Sizes.HardDisk", "HardDisk")
                        .WithMany()
                        .HasForeignKey("HardDiskId");

                    b.HasOne("AM.Core.Domain.Manufacturers.Manufacturer", "Manufacturer")
                        .WithMany()
                        .HasForeignKey("ManufacturerId");

                    b.HasOne("AM.Core.Domain.Sizes.Memory", "Memory")
                        .WithMany()
                        .HasForeignKey("MemoryId");

                    b.HasOne("AM.Core.Domain.Models.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId");

                    b.HasOne("AM.Core.Domain.Processors.Processor", "Processor")
                        .WithMany()
                        .HasForeignKey("ProcessorId");

                    b.HasOne("AM.Core.Domain.Suppliers.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId");

                    b.HasOne("AM.Core.Domain.Sizes.VideoCard", "VideoCard")
                        .WithMany()
                        .HasForeignKey("VideoCardId");
                });
#pragma warning restore 612, 618
        }
    }
}
